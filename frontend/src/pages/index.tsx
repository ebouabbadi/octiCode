import { useState, useEffect } from 'react';

const Home = () => {
  const [users, setUsers] = useState([]);

  interface userProps {
    id: number
    firstName: string,
    email: string
    image: string
    lastName: string
    address: {
      address: string,
      city: string
    }
    phone: string
  }

  useEffect(() => {
    (
      async () => {
        try {

          const response = await fetch('http://localhost:3001/users', {
          });
          const content = await response.json();
          if (response.ok) {
            setUsers(Array.from(content));
            console.log('-????????//', content)
          }
        } catch (error) {
        }
      }
    )();
  }, []);


  const [currentPage, setCurrentPage] = useState(1);
  const usersPerPage = 6;
  const indexOfLastUser = currentPage * usersPerPage;
  const indexOfFirstUser = indexOfLastUser - usersPerPage;
  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);
  const [nbr, setNbr] = useState(1);

  const renderUsers = () => {
    return currentUsers.map((user: userProps, index) => (
      <div className='w-[386px] h-auto flex-col  border-blue-700  border-2 flex items-center rounded-xl duration-700 hover:scale-105' key={index}>
        <h1 className='text-white mt-4 text-2xl font-bold'>{user.firstName} {user.lastName}</h1>
        <div className="w-[85%] h-[244px]  border-blue-700  border-2 mt-6 flex items-center justify-center rounded-xl">
          <img className='h-40 w-40 ' src={user.image} />
        </div>
        <div className='text-white font-bold text-md p-4  flex-col'>
          <div className="flex w- gap-4">
            <svg width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8 0C5.87827 0 3.84344 0.842855 2.34315 2.34315C0.842855 3.84344 0 5.87827 0 8C0 13.4 7.05 19.5 7.35 19.76C7.53113 19.9149 7.76165 20.0001 8 20.0001C8.23835 20.0001 8.46887 19.9149 8.65 19.76C9 19.5 16 13.4 16 8C16 5.87827 15.1571 3.84344 13.6569 2.34315C12.1566 0.842855 10.1217 0 8 0V0ZM8 17.65C5.87 15.65 2 11.34 2 8C2 6.4087 2.63214 4.88258 3.75736 3.75736C4.88258 2.63214 6.4087 2 8 2C9.5913 2 11.1174 2.63214 12.2426 3.75736C13.3679 4.88258 14 6.4087 14 8C14 11.34 10.13 15.66 8 17.65ZM8 4C7.20887 4 6.43552 4.2346 5.77772 4.67412C5.11992 5.11365 4.60723 5.73836 4.30448 6.46927C4.00173 7.20017 3.92252 8.00444 4.07686 8.78036C4.2312 9.55629 4.61216 10.269 5.17157 10.8284C5.73098 11.3878 6.44371 11.7688 7.21964 11.9231C7.99556 12.0775 8.79983 11.9983 9.53073 11.6955C10.2616 11.3928 10.8864 10.8801 11.3259 10.2223C11.7654 9.56448 12 8.79113 12 8C12 6.93913 11.5786 5.92172 10.8284 5.17157C10.0783 4.42143 9.06087 4 8 4ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39991 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z" fill="#002FD6" />
            </svg>
            <p>{user.address.city} {user.address.address}</p>
          </div>
          <div className="flex w-full gap-4">
            <svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V13C0 13.7956 0.316071 14.5587 0.87868 15.1213C1.44129 15.6839 2.20435 16 3 16H17C17.7956 16 18.5587 15.6839 19.1213 15.1213C19.6839 14.5587 20 13.7956 20 13V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0V0ZM16.59 2L10.71 7.88C10.617 7.97373 10.5064 8.04812 10.3846 8.09889C10.2627 8.14966 10.132 8.1758 10 8.1758C9.86799 8.1758 9.73728 8.14966 9.61542 8.09889C9.49356 8.04812 9.38296 7.97373 9.29 7.88L3.41 2H16.59ZM18 13C18 13.2652 17.8946 13.5196 17.7071 13.7071C17.5196 13.8946 17.2652 14 17 14H3C2.73478 14 2.48043 13.8946 2.29289 13.7071C2.10536 13.5196 2 13.2652 2 13V3.41L7.88 9.29C8.4425 9.8518 9.205 10.1674 10 10.1674C10.795 10.1674 11.5575 9.8518 12.12 9.29L18 3.41V13Z" fill="#002FD6" />
            </svg>
            <p>{user.email}</p>
          </div>
          <div className="flex w-full gap-4">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M17.41 11C17.19 11 16.96 10.93 16.74 10.88C16.2949 10.7805 15.8572 10.6501 15.43 10.49C14.9661 10.3212 14.4562 10.33 13.9984 10.5146C13.5405 10.6992 13.1671 11.0466 12.95 11.49L12.73 11.95C11.7589 11.3992 10.8617 10.7271 10.0601 9.95C9.2829 9.14837 8.61085 8.25118 8.06005 7.28L8.52005 7.07C8.96342 6.85292 9.31083 6.47953 9.49544 6.02169C9.68006 5.56385 9.68882 5.05391 9.52005 4.59C9.36124 4.15903 9.23096 3.71808 9.13005 3.27C9.08005 3.05 9.04005 2.82 9.01005 2.6C8.88861 1.89562 8.51967 1.25774 7.96967 0.801239C7.41967 0.344737 6.72475 0.0996088 6.01005 0.11H3.00005C2.5773 0.109446 2.1592 0.198248 1.77317 0.370584C1.38714 0.54292 1.04189 0.794898 0.76005 1.11C0.47237 1.43365 0.258165 1.81575 0.132153 2.23004C0.0061412 2.64432 -0.0286909 3.08098 0.0300499 3.51C0.573637 7.67214 2.47526 11.5387 5.44005 14.51C8.4114 17.4748 12.2779 19.3764 16.4401 19.92C16.5699 19.9299 16.7002 19.9299 16.83 19.92C17.5675 19.9211 18.2794 19.6505 18.83 19.16C19.1452 18.8782 19.3971 18.5329 19.5695 18.1469C19.7418 17.7609 19.8306 17.3428 19.83 16.92V13.92C19.8247 13.229 19.5809 12.5611 19.14 12.0291C18.6991 11.4971 18.088 11.1336 17.41 11ZM17.9 17C17.8997 17.1395 17.8702 17.2775 17.8134 17.4049C17.7565 17.5324 17.6736 17.6465 17.57 17.74C17.4605 17.8399 17.33 17.9141 17.1882 17.9573C17.0464 18.0006 16.8967 18.0117 16.75 17.99C13.0183 17.5026 9.5503 15.802 6.88005 13.15C4.20752 10.4775 2.49208 6.99737 2.00005 3.25C1.97833 3.10333 1.98949 2.95367 2.03272 2.81185C2.07596 2.67003 2.1502 2.5396 2.25005 2.43C2.34467 2.32515 2.46043 2.24154 2.5897 2.18466C2.71897 2.12778 2.85882 2.09892 3.00005 2.1H6.00005C6.23121 2.09435 6.45719 2.16898 6.63951 2.3112C6.82184 2.45341 6.94925 2.65442 7.00005 2.88C7.00005 3.15 7.09005 3.43 7.15005 3.7C7.26563 4.22386 7.41937 4.73857 7.61005 5.24L6.21005 5.9C5.96941 6.01046 5.78241 6.21185 5.69005 6.46C5.59003 6.70346 5.59003 6.97654 5.69005 7.22C7.12925 10.3028 9.60729 12.7808 12.69 14.22C12.9335 14.32 13.2066 14.32 13.45 14.22C13.6982 14.1276 13.8996 13.9406 14.01 13.7L14.64 12.3C15.156 12.4881 15.6838 12.6418 16.22 12.76C16.48 12.82 16.7601 12.87 17.0301 12.91C17.2556 12.9608 17.4566 13.0882 17.5989 13.2705C17.7411 13.4529 17.8157 13.6788 17.81 13.91L17.9 17ZM12 0C11.77 0 11.53 0 11.3 0C11.0348 0.0225434 10.7894 0.14952 10.6178 0.352997C10.4462 0.556474 10.3625 0.819784 10.385 1.085C10.4076 1.35022 10.5346 1.59562 10.738 1.76721C10.9415 1.93881 11.2048 2.02254 11.47 2H12C13.5913 2 15.1175 2.63214 16.2427 3.75736C17.3679 4.88258 18 6.4087 18 8C18 8.18 18 8.35 18 8.53C17.9779 8.79381 18.0612 9.05565 18.2318 9.2581C18.4024 9.46055 18.6463 9.5871 18.91 9.61H18.99C19.2404 9.61102 19.482 9.5181 19.6671 9.34961C19.8523 9.18113 19.9675 8.94932 19.99 8.7C19.99 8.47 19.99 8.23 19.99 8C19.9901 5.88 19.1486 3.84668 17.6504 2.34668C16.1523 0.846674 14.12 0.00265 12 0ZM14 8C14 8.26522 14.1054 8.51957 14.2929 8.70711C14.4805 8.89464 14.7348 9 15 9C15.2653 9 15.5196 8.89464 15.7072 8.70711C15.8947 8.51957 16 8.26522 16 8C16 6.93913 15.5786 5.92172 14.8285 5.17157C14.0783 4.42143 13.0609 4 12 4C11.7348 4 11.4805 4.10536 11.2929 4.29289C11.1054 4.48043 11 4.73478 11 5C11 5.26522 11.1054 5.51957 11.2929 5.70711C11.4805 5.89464 11.7348 6 12 6C12.5305 6 13.0392 6.21071 13.4143 6.58579C13.7893 6.96086 14 7.46957 14 8Z" fill="#002FD6" />
            </svg>
            <p>{user.phone}</p>
          </div>
        </div>
      </div>
    ));
  };

  const paginate = (pageNumber: any) => setCurrentPage(pageNumber);

  const pageNumbers = [];
  for (let i = 1; i <= Math.ceil(users.length / usersPerPage); i++) {
    pageNumbers.push(i);
  }


  return (
    <div className='w-full flex-col justify-center'>
      <div className='flex w-full justify-center p-2'>
        <div className=' w-auto h-[84px] flex bg-fslate-700 p-2 gap-4'>
          {pageNumbers.map(number => (
            <button key={number} onClick={() => { paginate(number); setNbr(number) }} className={`w-[64px] h-[64px] border-2 border-blue-600 rounded-xl hover:scale-115 duration-500 ${number == nbr ? 'bg-blue-600' : ''}`}>
              <h1 className={` ${number == nbr ? 'text-white' : 'text-blue-600'} text-2xl font-bold `}>
                {number}
              </h1>
            </button>
          ))}
        </div>
      </div>
      <div className="w-full">
        <div className="w-full  flex justify-center">
          <div className='  flex-row flex-wrap grid-cols-4x justify-center flex w-[1000px] gap-10'>
            {renderUsers()}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
